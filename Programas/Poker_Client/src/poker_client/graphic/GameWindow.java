package poker_client.graphic;

import entities.Card;
import entities.Player;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Toolkit;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import network.Checks;


public class GameWindow extends javax.swing.JFrame {
    private final Player PLAYER;
    private final String REFERENCE;
    
    /**
     * Creates new form WindowJugador
     */
    public GameWindow(Player player, String reference) {
        initComponents();
        PLAYER = player;
        REFERENCE = reference;
        
        this.setLocationRelativeTo(null);
        this.setVisible(true);
        
        jLabelIdOutput.setText(PLAYER.getID());
        jLabelOwnChips.setText(Integer.toString(PLAYER.getChips()));
        launchInfoThread();
    }
    
    /**
     * Enables and disables the buttons and fields in the interface.
     * @param isTurn 
     */
    private void manageTurn(boolean isTurn) {
        boolean prevStatus = this.jButtonBet.isEnabled();
        if(isTurn != prevStatus) { // Will improve performance time.
            this.jSpinnerBetAmount.setEnabled(isTurn);
            this.jButtonBet.setEnabled(isTurn);
            this.jButtonPass.setEnabled(isTurn);
        }
    }
    
    private void managePhases(String turn) {
        String prevPhase = this.jLabelPhaseOutput.getText();
        if(!turn.matches(prevPhase) || turn.matches("River")) {
            switch(turn) {
                case "PreFlop":
                    Checks.setShowed(false);
                    showOwnCards();
                    break;
                case "Flop": case "Turn":
                    showTableCards();
                    break;
                case "River":
                    if(!turn.matches(prevPhase)) showTableCards();
                    ArrayList info = Checks.checksEndRound(REFERENCE, PLAYER);
                    showWinner(info);
                    break;
                default:
                    break;
            }
        }
    } 
    
    private void showWinner(ArrayList info) {
        if(info != null && info.size() > 0 && !Checks.isShowed()) {
            String idWinner = (String) info.get(0);
            String play = (String) info.get(1);
            int pool = (int) info.get(2); 
            
            if(idWinner.contains(PLAYER.getID())) JOptionPane.showMessageDialog(rootPane, "You won this round! You have won " +pool +" chips. Next round will start in 5 seconds.");
            else JOptionPane.showMessageDialog(rootPane, "The winner is " +idWinner +", with " +play +". Next round will start in 5 seconds.");
            
            this.jLabelOwnChips.setText(Integer.toString(PLAYER.getChips()));
            
            resetCards();
            PLAYER.reset();
            Checks.setShowed(true);
        }
    }
    
    /**
     * Does launch the secondary thread which retrieves all the information.
     * Will be repeated periodically every i seconds. Look doc to see its functions.
     */
    private void launchInfoThread() {
        Runnable task = () -> { 
            while(true) {
                try {                
                    Checks.checks(PLAYER, REFERENCE);
                    manageTurn(Checks.isTurn());
                    managePhases(Checks.getPhase());
                    this.jLabelPhaseOutput.setText(Checks.getPhase());
                    this.jLabelPoolComun.setText(Integer.toString(Checks.getPool()));
                    Thread.sleep(500);
                } catch(InterruptedException ex) { ex.printStackTrace(); }
            }
        };
        new Thread(task).start();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelMain = new JPanel() {
            public void paintComponent(Graphics g) {
                Image img = Toolkit.getDefaultToolkit().getImage(
                    GameWindow.class.getResource("/imagenes/game_menu_background2.jpg"));
                g.drawImage(img, 0, 0, this.getWidth(), this.getHeight(), this);
            }
        };
        jLabelPoolComun = new javax.swing.JLabel();
        jLabelCommonPoolImg1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabelIdImage = new javax.swing.JLabel();
        jLabelOwnChips = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabelIdOutput = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabelPhaseTitle = new javax.swing.JLabel();
        jLabelPhaseOutput = new javax.swing.JLabel();
        jButtonPass = new javax.swing.JButton();
        jButtonBet = new javax.swing.JButton();
        jSpinnerBetAmount = new javax.swing.JSpinner();
        jLabelCartaMesa10 = new javax.swing.JLabel();
        jLabelCartaMesa9 = new javax.swing.JLabel();
        jLabelCartaMesa8 = new javax.swing.JLabel();
        jLabelCartaMesa7 = new javax.swing.JLabel();
        jLabelCartaMesa6 = new javax.swing.JLabel();
        jLabelCartaPropia4 = new javax.swing.JLabel();
        jLabelCartaPropia3 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuProperties = new javax.swing.JMenu();
        jMenuItemExit = new javax.swing.JMenuItem();
        jMenuLeyend = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Game Window");
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/imagenes/icon.png")));

        jPanelMain.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabelPoolComun.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        jLabelPoolComun.setForeground(new java.awt.Color(255, 255, 255));
        jLabelPoolComun.setText("<html><b>Common Pool</b></html>");
        jPanelMain.add(jLabelPoolComun, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 150, -1, 31));

        jLabelCommonPoolImg1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/chip.png"))); // NOI18N
        jPanelMain.add(jLabelCommonPoolImg1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 140, 60, 50));

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Player's Info");
        jPanelMain.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, -1, -1));

        jLabelIdImage.setForeground(new java.awt.Color(255, 255, 255));
        jLabelIdImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/user.png"))); // NOI18N
        jPanelMain.add(jLabelIdImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, -1, -1));

        jLabelOwnChips.setForeground(new java.awt.Color(255, 255, 255));
        jLabelOwnChips.setText("#Chips");
        jPanelMain.add(jLabelOwnChips, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 100, 50, 40));

        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/chip2.png"))); // NOI18N
        jPanelMain.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 100, 40, 40));

        jLabelIdOutput.setForeground(new java.awt.Color(255, 255, 255));
        jLabelIdOutput.setText("ID");
        jPanelMain.add(jLabelIdOutput, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 60, 130, 30));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Actions");
        jPanelMain.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 10, -1, -1));

        jLabelPhaseTitle.setForeground(new java.awt.Color(255, 255, 255));
        jLabelPhaseTitle.setText("Phase:");
        jPanelMain.add(jLabelPhaseTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 60, -1, -1));

        jLabelPhaseOutput.setForeground(new java.awt.Color(255, 255, 255));
        jLabelPhaseOutput.setText("Not started");
        jPanelMain.add(jLabelPhaseOutput, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 60, 86, -1));

        jButtonPass.setText("Pass");
        jButtonPass.setEnabled(false);
        jButtonPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPassActionPerformed(evt);
            }
        });
        jPanelMain.add(jButtonPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 90, 140, -1));

        jButtonBet.setText("Bet");
        jButtonBet.setEnabled(false);
        jButtonBet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBetActionPerformed(evt);
            }
        });
        jPanelMain.add(jButtonBet, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 130, 76, -1));

        jSpinnerBetAmount.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(10), Integer.valueOf(1), null, Integer.valueOf(10)));
        jSpinnerBetAmount.setEnabled(false);
        jPanelMain.add(jSpinnerBetAmount, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 130, 50, -1));

        jLabelCartaMesa10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/card_back.png"))); // NOI18N
        jPanelMain.add(jLabelCartaMesa10, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 220, -1, 80));

        jLabelCartaMesa9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/card_back.png"))); // NOI18N
        jPanelMain.add(jLabelCartaMesa9, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 220, -1, 80));

        jLabelCartaMesa8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/card_back.png"))); // NOI18N
        jPanelMain.add(jLabelCartaMesa8, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 220, -1, 80));

        jLabelCartaMesa7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/card_back.png"))); // NOI18N
        jPanelMain.add(jLabelCartaMesa7, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 220, -1, 80));

        jLabelCartaMesa6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/card_back.png"))); // NOI18N
        jPanelMain.add(jLabelCartaMesa6, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 220, -1, 80));

        jLabelCartaPropia4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/card_back.png"))); // NOI18N
        jPanelMain.add(jLabelCartaPropia4, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 330, -1, 80));

        jLabelCartaPropia3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/card_back.png"))); // NOI18N
        jPanelMain.add(jLabelCartaPropia3, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 330, -1, 80));

        jMenuProperties.setText("Properties");

        jMenuItemExit.setText("Exit");
        jMenuItemExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemExitActionPerformed(evt);
            }
        });
        jMenuProperties.add(jMenuItemExit);

        jMenuBar1.add(jMenuProperties);

        jMenuLeyend.setText("Leyend");
        jMenuLeyend.setEnabled(false);
        jMenuBar1.add(jMenuLeyend);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelMain, javax.swing.GroupLayout.DEFAULT_SIZE, 820, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelMain, javax.swing.GroupLayout.DEFAULT_SIZE, 439, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void showCard(JLabel label, Card card) {
        String suit = card.getSUIT();
        int value = Integer.parseInt(card.getVALUE()); // Did the change of J = 11, Q = 12... in card getter.
        
        String imgName = "/imagenes/" +suit +"/" +suit +value +".png".trim();
        
        /* Debug. Route to take the .png */
        System.out.println("Image Route: " +imgName);
        
        label.setIcon(new javax.swing.ImageIcon(getClass().getResource(imgName)));
    }
    
    private void showOwnCards() {
        ArrayList<Card> cards = PLAYER.getOwnCards();
        showCard(jLabelCartaPropia3, cards.get(0));
        showCard(jLabelCartaPropia4, cards.get(1));
    }
    
    private void showTableCards() {
        ArrayList<Card> cards = PLAYER.getTableCards();
        System.out.println("Tamaño: " +cards.size());
        
        int amount = cards.size();
        if(amount > 0) {
            showCard(jLabelCartaMesa6, cards.get(0));
            showCard(jLabelCartaMesa7, cards.get(1));
            showCard(jLabelCartaMesa8, cards.get(2));
        }
        
        if(amount == 4) showCard(jLabelCartaMesa9, cards.get(3));
        if(amount >= 5) showCard(jLabelCartaMesa10, cards.get(4));
    }
    
    private void resetCard(JLabel label) {
        String route = "/imagenes/windows/juego/card_back.png";
        label.setIcon(new javax.swing.ImageIcon(getClass().getResource(route)));
    }
    
    private void resetCards() {
        resetCard(jLabelCartaPropia3);
        resetCard(jLabelCartaPropia4);
        resetCard(jLabelCartaMesa6);
        resetCard(jLabelCartaMesa7);
        resetCard(jLabelCartaMesa8);
        resetCard(jLabelCartaMesa9);
        resetCard(jLabelCartaMesa10);
    }
    
    /**
     * Complete action to bet. Gets the value from the jSpinner.
     * @return Int. Total pool after the bet has been added.
     */
    private int bet(int amount) {
        int pool = PLAYER.bet(REFERENCE, amount);
        return pool;
    }
    
    private void jButtonBetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBetActionPerformed
        int amount = (int) jSpinnerBetAmount.getValue();
        if(amount <= PLAYER.getChips()) {
            int pool = bet(amount);
            this.jLabelOwnChips.setText(Integer.toString(PLAYER.getChips()));
            this.jLabelPoolComun.setText(Integer.toString(pool));
        } else JOptionPane.showMessageDialog(rootPane, "You can bet more chips than you have.");
    }//GEN-LAST:event_jButtonBetActionPerformed
       
    private void jMenuItemExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItemExitActionPerformed

    private void jButtonPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPassActionPerformed
        int pool = bet(0);
        this.jLabelOwnChips.setText(Integer.toString(PLAYER.getChips()));
        this.jLabelPoolComun.setText(Integer.toString(pool));
    }//GEN-LAST:event_jButtonPassActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBet;
    private javax.swing.JButton jButtonPass;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelCartaMesa10;
    private javax.swing.JLabel jLabelCartaMesa6;
    private javax.swing.JLabel jLabelCartaMesa7;
    private javax.swing.JLabel jLabelCartaMesa8;
    private javax.swing.JLabel jLabelCartaMesa9;
    private javax.swing.JLabel jLabelCartaPropia3;
    private javax.swing.JLabel jLabelCartaPropia4;
    private javax.swing.JLabel jLabelCommonPoolImg1;
    private javax.swing.JLabel jLabelIdImage;
    private javax.swing.JLabel jLabelIdOutput;
    private javax.swing.JLabel jLabelOwnChips;
    private javax.swing.JLabel jLabelPhaseOutput;
    private javax.swing.JLabel jLabelPhaseTitle;
    private javax.swing.JLabel jLabelPoolComun;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItemExit;
    private javax.swing.JMenu jMenuLeyend;
    private javax.swing.JMenu jMenuProperties;
    private javax.swing.JPanel jPanelMain;
    private javax.swing.JSpinner jSpinnerBetAmount;
    // End of variables declaration//GEN-END:variables
}
